name: API Build Checks
on:
  push:
    branches:
      - '*'
      - '!master'
    paths:
      - 'apps/api/src/**'

jobs:
  build-checks:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # # Docker Hub image that `container-job` executes in
    # container: node:18.12.1-buster

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.7-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.1.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          PG_PORT: 5432
          PG_USER: postgres
          PG_PASSWORD: postgres
          PORT: 3000
          ENV: dev
